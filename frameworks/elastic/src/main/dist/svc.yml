name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  master:
    count: 3
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
    rlimits:
      {{#TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_MEMLOCK:
        soft: -1
        hard: -1
      {{/TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_NOFILE:
        soft: {{MASTER_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{MASTER_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{MASTER_NODE_PLACEMENT}}}'
    {{#MASTER_NODE_HOST_VOLUME_ENABLED}}
    host-volumes:
      host-volume:
        container-path: "container-path"
        host-path: {{MASTER_NODE_HOST_VOLUME_HOST_PATH}}
        mode: RW
    {{/MASTER_NODE_HOST_VOLUME_ENABLED}}
    {{#MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
    external-volumes:
      portworx-volume:
        type: DOCKER
        container-path: "container-path"
        driver-name: {{MASTER_NODE_EXTERNAL_VOLUME_DRIVER_NAME}}
        driver-options: '{{{MASTER_NODE_EXTERNAL_VOLUME_DRIVER_OPTIONS}}}'
        {{#MASTER_NODE_EXTERNAL_VOLUME_NAME}}
        volume-name: {{MASTER_NODE_EXTERNAL_VOLUME_NAME}}
        {{/MASTER_NODE_EXTERNAL_VOLUME_NAME}}
        volume-mode: RW
    {{/MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
    tasks:
      node:
        goal: RUNNING
        cpus: {{MASTER_NODE_CPUS}}
        memory: {{MASTER_NODE_MEM}}
        ports:
          master-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: master
              port: 9200
          master-transport:
            port: {{MASTER_NODE_TRANSPORT_PORT}}
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: master
              port: 9300
        {{^MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
        volume:
          path: "container-path"
          type: {{MASTER_NODE_DISK_TYPE}}
          size: {{MASTER_NODE_DISK}}
          {{#MASTER_NODE_VOLUME_PROFILE}}
          profiles:
            - {{MASTER_NODE_VOLUME_PROFILE}}
          {{/MASTER_NODE_VOLUME_PROFILE}}
        {{/MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh
          ./scripts/customize-log4j2.sh
          ./scripts/bootstrap-pass.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          {{#MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
          MASTER_NODE_EXTERNAL_VOLUME_ENABLED: {{MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
          MASTER_NODE_HOST_VOLUME_ENABLED: {{MASTER_NODE_HOST_VOLUME_ENABLED}}
          {{/MASTER_NODE_EXTERNAL_VOLUME_ENABLED}}
          NODE_HEAP_MB: {{MASTER_NODE_HEAP_MB}}
          DATA_NODE_COUNT: {{DATA_NODE_COUNT}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          MASTER_ENABLED: true
          DATA_ENABLED: false
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          CURL_SUCCESSFUL: false
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
          customize-log4j2.sh:
            template: customize-log4j2.sh
            dest: scripts/customize-log4j2.sh
          bootstrap-pass.sh:
            template: bootstrap-pass.sh.mustache
            dest: scripts/bootstrap-pass.sh
          elastic-pass.sh:
            template: elastic-pass.sh.mustache
            dest: scripts/elastic-pass.sh
        readiness-check:
          cmd: |
            # set the elastic superuser pass
            ./scripts/elastic-pass.sh
            
            # check the readiness of elastic service
            curl -k -I -s -f -u {{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER}}:{{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{TASKCFG_ALL_ELASTICSEARCH_HTTP_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP
          interval: {{MASTER_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{MASTER_NODE_READINESS_CHECK_DELAY}}
          timeout: {{MASTER_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  data:
    count: {{DATA_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
    rlimits:
      {{#TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_MEMLOCK:
        soft: -1
        hard: -1
      {{/TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_NOFILE:
        soft: {{DATA_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{DATA_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{DATA_NODE_PLACEMENT}}}'
    {{#DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
    external-volumes:
      portworx-volume:
        type: DOCKER
        container-path: "container-path"
        driver-name: {{DATA_NODE_EXTERNAL_VOLUME_DRIVER_NAME}}
        driver-options: '{{{DATA_NODE_EXTERNAL_VOLUME_DRIVER_OPTIONS}}}'
        {{#DATA_NODE_EXTERNAL_VOLUME_NAME}}
        volume-name: {{DATA_NODE_EXTERNAL_VOLUME_NAME}}
        {{/DATA_NODE_EXTERNAL_VOLUME_NAME}}
        volume-mode: RW
    {{/DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
    tasks:
      node:
        goal: RUNNING
        cpus: {{DATA_NODE_CPUS}}
        memory: {{DATA_NODE_MEM}}
        ports:
          data-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: data
              port: 9200
          data-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: data
              port: 9300
        {{^DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
        volume:
          path: "container-path"
          type: {{DATA_NODE_DISK_TYPE}}
          size: {{DATA_NODE_DISK}}
          {{#DATA_NODE_VOLUME_PROFILE}}
          profiles:
            - {{DATA_NODE_VOLUME_PROFILE}}
          {{/DATA_NODE_VOLUME_PROFILE}}
        {{/DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh
          ./scripts/customize-log4j2.sh
          ./scripts/bootstrap-pass.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          {{#DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
          DATA_NODE_EXTERNAL_VOLUME_ENABLED: {{DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
          {{/DATA_NODE_EXTERNAL_VOLUME_ENABLED}}
          NODE_HEAP_MB: {{DATA_NODE_HEAP_MB}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: true
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          CURL_SUCCESSFUL: false
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
          customize-log4j2.sh:
            template: customize-log4j2.sh
            dest: scripts/customize-log4j2.sh
          bootstrap-pass.sh:
            template: bootstrap-pass.sh.mustache
            dest: scripts/bootstrap-pass.sh
          elastic-pass.sh:
            template: elastic-pass.sh.mustache
            dest: scripts/elastic-pass.sh
        readiness-check:
          cmd: |
            # set the elastic superuser pass
            ./scripts/elastic-pass.sh

            # check the readiness of elastic service
            curl -k -I -s -f -u {{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER}}:{{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{TASKCFG_ALL_ELASTICSEARCH_HTTP_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP
          interval: {{DATA_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{DATA_NODE_READINESS_CHECK_DELAY}}
          timeout: {{DATA_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  ingest:
    count: {{INGEST_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
    rlimits:
      {{#TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_MEMLOCK:
        soft: -1
        hard: -1
      {{/TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_NOFILE:
        soft: {{INGEST_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{INGEST_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{INGEST_NODE_PLACEMENT}}}'
    {{#INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
    external-volumes:
      portworx-volume:
        type: DOCKER
        container-path: "container-path"
        driver-name: {{INGEST_NODE_EXTERNAL_VOLUME_DRIVER_NAME}}
        driver-options: '{{{INGEST_NODE_EXTERNAL_VOLUME_DRIVER_OPTIONS}}}'
        {{#INGEST_NODE_EXTERNAL_VOLUME_NAME}}
        volume-name: {{INGEST_NODE_EXTERNAL_VOLUME_NAME}}
        {{/INGEST_NODE_EXTERNAL_VOLUME_NAME}}
        volume-mode: RW
    {{/INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
    tasks:
      node:
        goal: RUNNING
        cpus: {{INGEST_NODE_CPUS}}
        memory: {{INGEST_NODE_MEM}}
        ports:
          ingest-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: ingest
              port: 9200
          ingest-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: ingest
              port: 9300
        {{^INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
        volume:
          path: "container-path"
          type: {{INGEST_NODE_DISK_TYPE}}
          size: {{INGEST_NODE_DISK}}
          {{#INGEST_NODE_VOLUME_PROFILE}}
          profiles:
            - {{INGEST_NODE_VOLUME_PROFILE}}
          {{/INGEST_NODE_VOLUME_PROFILE}}
        {{/INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh
          ./scripts/customize-log4j2.sh
          ./scripts/bootstrap-pass.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          {{#INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
          INGEST_NODE_EXTERNAL_VOLUME_ENABLED: {{INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
          {{/INGEST_NODE_EXTERNAL_VOLUME_ENABLED}}
          NODE_HEAP_MB: {{INGEST_NODE_HEAP_MB}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: false
          INGEST_ENABLED: true
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          CURL_SUCCESSFUL: false
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
          customize-log4j2.sh:
            template: customize-log4j2.sh
            dest: scripts/customize-log4j2.sh
          bootstrap-pass.sh:
            template: bootstrap-pass.sh.mustache
            dest: scripts/bootstrap-pass.sh
          elastic-pass.sh:
            template: elastic-pass.sh.mustache
            dest: scripts/elastic-pass.sh
        readiness-check:
          cmd: |
            # set the elastic superuser pass
            ./scripts/elastic-pass.sh

            # check the readiness of elastic service
            curl -k -I -s -f -u {{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER}}:{{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{TASKCFG_ALL_ELASTICSEARCH_HTTP_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP
          interval: {{INGEST_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{INGEST_NODE_READINESS_CHECK_DELAY}}
          timeout: {{INGEST_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  exporter:
    {{#PROMETHEUS_EXPORTER_ENABLED}}
    count: 1
    {{/PROMETHEUS_EXPORTER_ENABLED}}
    {{^PROMETHEUS_EXPORTER_ENABLED}}
    count: 0
    {{/PROMETHEUS_EXPORTER_ENABLED}}
    allow-decommission: true
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{PROMETHEUS_EXPORTER_URI}}
    tasks:
      node:
        goal: RUNNING
        cpus: {{PROMETHEUS_EXPORTER_CPUS}}
        memory: {{PROMETHEUS_EXPORTER_MEM}}
        labels: "DCOS_METRICS_FORMAT:prometheus,DCOS_METRICS_PORT_NAME:exporter,DCOS_METRICS_ENDPOINT:/metrics"
        ports:
          exporter:
            port: 0
            env-key: METRICS_PORT
            vip:
              prefix: exporter
              port: 9114
        volume:
          path: "container-path"
          type: {{PROMETHEUS_EXPORTER_DISK_TYPE}}
          size: {{PROMETHEUS_EXPORTER_DISK}}
          {{#PROMETHEUS_EXPORTER_VOLUME_PROFILE}}
            profiles:
              - {{PROMETHEUS_EXPORTER_VOLUME_PROFILE}}
          {{/PROMETHEUS_EXPORTER_VOLUME_PROFILE}}
        cmd: |
          set -ex
          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

        {{#TASKCFG_ALL_SECURITY_ENABLED}}
          exec ./elasticsearch_exporter-{{ELASTICSEARCH_PROMETHEUS_EXPORTER_VERSION}}.linux-amd64/elasticsearch_exporter \
            --es.uri="{{TASKCFG_ALL_ELASTICSEARCH_HTTP_PROTOCOL}}://{{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER}}:{{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER_PASSWORD}}@master.${FRAMEWORK_NAME//\//}.l4lb.thisdcos.directory:9200" \
            --es.ca="exporter.ca" --es.client-private-key="exporter.key" --es.client-cert="exporter.crt" \
            --web.listen-address=:$METRICS_PORT \
            {{{PROMETHEUS_EXPORTER_CONFIGURATION_OPTIONS}}}
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
        {{^TASKCFG_ALL_SECURITY_ENABLED}}
          exec ./elasticsearch_exporter-{{ELASTICSEARCH_PROMETHEUS_EXPORTER_VERSION}}.linux-amd64/elasticsearch_exporter \
            --es.uri="{{TASKCFG_ALL_ELASTICSEARCH_HTTP_PROTOCOL}}://master.${FRAMEWORK_NAME//\//}.l4lb.thisdcos.directory:9200" \
            --web.listen-address=:$METRICS_PORT \
            {{{PROMETHEUS_EXPORTER_CONFIGURATION_OPTIONS}}}
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
        env:
          ELASTICSEARCH_PROMETHEUS_EXPORTER_VERSION: {{ELASTICSEARCH_PROMETHEUS_EXPORTER_VERSION}}
        readiness-check:
          cmd: "curl --silent --output /dev/null --fail --write-out %{http_code} localhost:$METRICS_PORT/health"
          interval: {{PROMETHEUS_EXPORTER_READINESS_CHECK_INTERVAL}}
          delay: {{PROMETHEUS_EXPORTER_READINESS_CHECK_DELAY}}
          timeout: {{PROMETHEUS_EXPORTER_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: exporter
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  coordinator:
    count: {{COORDINATOR_NODE_COUNT}}
    allow-decommission: true
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
    rlimits:
      {{#TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_MEMLOCK:
        soft: -1
        hard: -1
      {{/TASKCFG_ALL_BOOTSTRAP_MEMORY_LOCK}}
      RLIMIT_NOFILE:
        soft: {{COORDINATOR_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{COORDINATOR_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{COORDINATOR_NODE_PLACEMENT}}}'
    {{#COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
    external-volumes:
      portworx-volume:
        type: DOCKER
        container-path: "container-path"
        driver-name: {{COORDINATOR_NODE_EXTERNAL_VOLUME_DRIVER_NAME}}
        driver-options: '{{{COORDINATOR_NODE_EXTERNAL_VOLUME_DRIVER_OPTIONS}}}'
        {{#COORDINATOR_NODE_EXTERNAL_VOLUME_NAME}}
        volume-name: {{COORDINATOR_NODE_EXTERNAL_VOLUME_NAME}}
        {{/COORDINATOR_NODE_EXTERNAL_VOLUME_NAME}}
        volume-mode: RW
    {{/COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
    tasks:
      node:
        goal: RUNNING
        cpus: {{COORDINATOR_NODE_CPUS}}
        memory: {{COORDINATOR_NODE_MEM}}
        ports:
          coordinator-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: coordinator
              port: 9200
          coordinator-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: coordinator
              port: 9300
        {{^COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
        volume:
          path: "container-path"
          type: {{COORDINATOR_NODE_DISK_TYPE}}
          size: {{COORDINATOR_NODE_DISK}}
          {{#COORDINATOR_NODE_VOLUME_PROFILE}}
          profiles:
            - {{COORDINATOR_NODE_VOLUME_PROFILE}}
          {{/COORDINATOR_NODE_VOLUME_PROFILE}}
        {{/COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh
          ./scripts/customize-log4j2.sh
          ./scripts/bootstrap-pass.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          {{#COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
          COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED: {{COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
          {{/COORDINATOR_NODE_EXTERNAL_VOLUME_ENABLED}}
          NODE_HEAP_MB: {{COORDINATOR_NODE_HEAP_MB}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: false
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          CURL_SUCCESSFUL: false
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
          customize-log4j2.sh:
            template: customize-log4j2.sh
            dest: scripts/customize-log4j2.sh
          bootstrap-pass.sh:
            template: bootstrap-pass.sh.mustache
            dest: scripts/bootstrap-pass.sh
          elastic-pass.sh:
            dest: scripts/elastic-pass.sh
            template: elastic-pass.sh.mustache
        readiness-check:
          cmd: |
            # set the elastic superuser pass
            ./scripts/elastic-pass.sh
          
            # check the readiness of elastic service
            curl -k -I -s -f -u {{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER}}:{{TASKCFG_ALL_ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{TASKCFG_ALL_ELASTICSEARCH_HTTP_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP
          interval: {{COORDINATOR_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{COORDINATOR_NODE_READINESS_CHECK_DELAY}}
          timeout: {{COORDINATOR_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
plans:
  deploy:
    strategy: {{DEPLOY_STRATEGY}}
    phases:
      master-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: master
      data-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: data
      ingest-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: ingest
      coordinator-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: coordinator
      exporter-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: exporter
  update:
    strategy: {{UPDATE_STRATEGY}}
    phases:
      master-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: master
      data-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: data
      ingest-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: ingest
      coordinator-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: coordinator
      exporter-deploy:
        strategy: {{UPDATE_STRATEGY}}
        pod: exporter
