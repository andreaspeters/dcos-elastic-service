name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  master:
    count: 3
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
      {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      - {{SEARCHGUARD_SGADMIN_URI}}
      {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{MASTER_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{MASTER_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{MASTER_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{MASTER_NODE_CPUS}}
        memory: {{MASTER_NODE_MEM}}
        ports:
          master-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: master
              port: 9200
          master-transport:
            port: {{MASTER_NODE_TRANSPORT_PORT}}
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: master
              port: 9300
        volume:
          path: "container-path"
          type: {{MASTER_NODE_DISK_TYPE}}
          size: {{MASTER_NODE_DISK}}
          {{#MASTER_NODE_VOLUME_PROFILE}}
          profiles:
            - {{MASTER_NODE_VOLUME_PROFILE}}
          {{/MASTER_NODE_VOLUME_PROFILE}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{MASTER_NODE_HEAP_MB}}
          DATA_NODE_COUNT: {{DATA_NODE_COUNT}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          MASTER_ENABLED: true
          DATA_ENABLED: false
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{MASTER_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{MASTER_NODE_READINESS_CHECK_DELAY}}
          timeout: {{MASTER_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  data:
    count: {{DATA_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
      {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      - {{SEARCHGUARD_SGADMIN_URI}}
      {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{DATA_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{DATA_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{DATA_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{DATA_NODE_CPUS}}
        memory: {{DATA_NODE_MEM}}
        ports:
          data-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: data
              port: 9200
          data-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: data
              port: 9300
        volume:
          path: "container-path"
          type: {{DATA_NODE_DISK_TYPE}}
          size: {{DATA_NODE_DISK}}
          {{#DATA_NODE_VOLUME_PROFILE}}
          profiles:
            - {{DATA_NODE_VOLUME_PROFILE}}
          {{/DATA_NODE_VOLUME_PROFILE}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{DATA_NODE_HEAP_MB}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: true
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{DATA_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{DATA_NODE_READINESS_CHECK_DELAY}}
          timeout: {{DATA_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  ingest:
    count: {{INGEST_NODE_COUNT}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
      {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      - {{SEARCHGUARD_SGADMIN_URI}}
      {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{INGEST_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{INGEST_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{INGEST_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{INGEST_NODE_CPUS}}
        memory: {{INGEST_NODE_MEM}}
        ports:
          ingest-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: ingest
              port: 9200
          ingest-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: ingest
              port: 9300
        volume:
          path: "container-path"
          type: {{INGEST_NODE_DISK_TYPE}}
          size: {{INGEST_NODE_DISK}}
          {{#INGEST_NODE_VOLUME_PROFILE}}
          profiles:
            - {{INGEST_NODE_VOLUME_PROFILE}}
          {{/INGEST_NODE_VOLUME_PROFILE}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{INGEST_NODE_HEAP_MB}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: false
          INGEST_ENABLED: true
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{INGEST_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{INGEST_NODE_READINESS_CHECK_DELAY}}
          timeout: {{INGEST_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  coordinator:
    count: {{COORDINATOR_NODE_COUNT}}
    allow-decommission: true
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{BOOTSTRAP_URI}}
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{DIAGNOSTICS_URI}}
      - {{STATSD_URI}}
      {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      - {{SEARCHGUARD_SGADMIN_URI}}
      {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
    rlimits:
      RLIMIT_NOFILE:
        soft: {{COORDINATOR_NODE_RLIMIT_NOFILE_SOFT}}
        hard: {{COORDINATOR_NODE_RLIMIT_NOFILE_HARD}}
    placement: '{{{COORDINATOR_NODE_PLACEMENT}}}'
    tasks:
      node:
        goal: RUNNING
        cpus: {{COORDINATOR_NODE_CPUS}}
        memory: {{COORDINATOR_NODE_MEM}}
        ports:
          coordinator-http:
            port: 0
            env-key: PORT_HTTP
            advertise: true
            vip:
              prefix: coordinator
              port: 9200
          coordinator-transport:
            port: 0
            env-key: PORT_TRANSPORT
            advertise: true
            vip:
              prefix: coordinator
              port: 9300
        volume:
          path: "container-path"
          type: {{COORDINATOR_NODE_DISK_TYPE}}
          size: {{COORDINATOR_NODE_DISK}}
          {{#COORDINATOR_NODE_VOLUME_PROFILE}}
          profiles:
            - {{COORDINATOR_NODE_VOLUME_PROFILE}}
          {{/COORDINATOR_NODE_VOLUME_PROFILE}}
        cmd: |
          set -ex

          export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)

          mkdir scripts

          ./bootstrap

          chmod -R +x scripts

          ./scripts/java-dns-ttl.sh
          ./scripts/install-plugins.sh
          ./scripts/setup-java-policy.sh

          exec ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch
        env:
          NODE_HEAP_MB: {{COORDINATOR_NODE_HEAP_MB}}
          MASTER_NODE_TRANSPORT_PORT: {{MASTER_NODE_TRANSPORT_PORT}}
          DATA_ENABLED: false
          INGEST_ENABLED: false
          ELASTIC_VERSION: {{ELASTIC_VERSION}}
          ELASTIC_STATSD_VERSION: {{ELASTIC_STATSD_VERSION}}
        configs:
          jvm.options:
            template: jvm.options
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/jvm.options
          elasticsearch.yml:
            template: elasticsearch.yml
            dest: elasticsearch-{{ELASTIC_VERSION}}/config/elasticsearch.yml
          install-plugins.sh:
            template: install-plugins.sh
            dest: scripts/install-plugins.sh
          java-dns-ttl.sh:
            template: java-dns-ttl.sh
            dest: scripts/java-dns-ttl.sh
          setup-java-policy.sh:
            template: setup-java-policy.sh
            dest: scripts/setup-java-policy.sh
        readiness-check:
          cmd: "curl -k -I -s -f -u {{ELASTICSEARCH_HEALTH_USER}}:{{ELASTICSEARCH_HEALTH_USER_PASSWORD}} {{ELASTICSEARCH_HEALTH_PROTOCOL}}://$TASK_NAME.$FRAMEWORK_HOST:$PORT_HTTP"
          interval: {{COORDINATOR_NODE_READINESS_CHECK_INTERVAL}}
          delay: {{COORDINATOR_NODE_READINESS_CHECK_DELAY}}
          timeout: {{COORDINATOR_NODE_READINESS_CHECK_TIMEOUT}}
        {{#TASKCFG_ALL_SECURITY_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_ENABLED}}
  {{#TASKCFG_ALL_SECURITY_ENABLED}}
  {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
  sgadmin:
    count: 1
    allow-decomission: true
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    secrets:
      {{#TASKCFG_ALL_SG_INTERNAL_USERS_SECRET_PATH}}
      sg_internal_users:
        secret: {{TASKCFG_ALL_SG_INTERNAL_USERS_SECRET_PATH}}
        file: sg_internal_users.yml
      {{/TASKCFG_ALL_SG_INTERNAL_USERS_SECRET_PATH}}
      {{#TASKCFG_ALL_SG_CONFIG_SECRET_PATH}}
      sg_config:
        secret: {{TASKCFG_ALL_SG_CONFIG_SECRET_PATH}}
        file: sg_config.yml
      {{/TASKCFG_ALL_SG_CONFIG_SECRET_PATH}}
      {{#TASKCFG_ALL_SG_ACTION_GROUPS_SECRET_PATH}}
      sg_action_groups:
        secret: {{TASKCFG_ALL_SG_ACTION_GROUPS_SECRET_PATH}}
        file: sg_action_groups.yml
      {{/TASKCFG_ALL_SG_ACTION_GROUPS_SECRET_PATH}}
      {{#TASKCFG_ALL_SG_ROLES_SECRET_PATH}}
      sg_roles:
        secret: {{TASKCFG_ALL_SG_ROLES_SECRET_PATH}}
        file: sg_roles.yml
      {{/TASKCFG_ALL_SG_ROLES_SECRET_PATH}}
      {{#TASKCFG_ALL_SG_ROLES_MAPPING_SECRET_PATH}}
      sg_roles_mapping:
        secret: {{TASKCFG_ALL_SG_ROLES_MAPPING_SECRET_PATH}}
        file: sg_roles_mapping.yml
      {{/TASKCFG_ALL_SG_ROLES_MAPPING_SECRET_PATH}}
      {{#TASKCFG_ALL_SG_TENANTS_SECRET_PATH}}
      sg_tenants:
        secret: {{TASKCFG_ALL_SG_TENANTS_SECRET_PATH}}
        file: sg_tenants.yml
      {{/TASKCFG_ALL_SG_TENANTS_SECRET_PATH}}
    uris:
      - {{ELASTICSEARCH_JAVA_URI}}
      - {{ELASTICSEARCH_URI}}
      - {{SEARCHGUARD_SGADMIN_URI}}
    placement:
    ports:
      sgadmin-http:
        port: 0
        env-key: PORT_HTTP
        advertise: true
        vip:
          prefix: sgadmin
          port: 9200
      sgadmin-transport:
        port: 0
        env-key: PORT_TRANSPORT
        advertise: true
        vip:
          prefix: sgadmin
          port: 9300
    tasks:
      admin:
        goal: ONCE
        cpus: 0.25
        memory: 512
        cmd: |
         set -e
         export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jdk*/)
         ./elasticsearch-{{ELASTIC_VERSION}}/bin/elasticsearch-plugin install --batch file://$(ls $MESOS_SANDBOX/search-guard-*.zip)
         for sg_config_file in sg_internal_users.yml sg_action_groups.yml sg_roles.yml sg_roles_mapping.yml sg_config.yml sg_tenants.yml; do
           if [ -f $MESOS_SANDBOX/$sg_config_file ]; then
             ln -sf $MESOS_SANDBOX/$sg_config_file sgconfig/$sg_config_file
           fi
         done
         chmod +x elasticsearch-{{ELASTIC_VERSION}}/plugins/search-guard-6/tools/sgadmin.sh

         cat > sgadmin.sh << 'EOF'
         #!/bin/bash
         openssl pkcs8 -in node.key -topk8 -nocrypt -out node.key.pkcs8
         elasticsearch-{{ELASTIC_VERSION}}/plugins/search-guard-6/tools/sgadmin.sh -key node.key.pkcs8 -cert node.crt -cacert node.ca -cd sgconfig -cn elastic -h master.${FRAMEWORK_NAME//\//}.l4lb.thisdcos.directory
         EOF

         chmod +x sgadmin.sh
         ./sgadmin.sh
        transport-encryption:
          - name: node
            type: TLS
  {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
  {{/TASKCFG_ALL_SECURITY_ENABLED}}
plans:
  deploy:
    strategy: {{DEPLOY_STRATEGY}}
    phases:
      master-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: master
      data-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: data
      ingest-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: ingest
      coordinator-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: coordinator
      {{#TASKCFG_ALL_SECURITY_ENABLED}}
      {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      sgadmin-deploy:
        strategy: {{DEPLOY_STRATEGY}}
        pod: sgadmin
      {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      {{/TASKCFG_ALL_SECURITY_ENABLED}}
  update:
    strategy: {{UPDATE_STRATEGY}}
    phases:
      master-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: master
      data-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: data
      ingest-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: ingest
      coordinator-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: coordinator
      {{#TASKCFG_ALL_SECURITY_ENABLED}}
      {{#TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      sgadmin-update:
        strategy: {{UPDATE_STRATEGY}}
        pod: sgadmin
      {{/TASKCFG_ALL_SEARCHGUARD_ENABLED}}
      {{/TASKCFG_ALL_SECURITY_ENABLED}}
